# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/03_collect.ipynb (unless otherwise specified).

__all__ = ['COUNTRIES', 'SUMMARY']

# Cell
from .imports import *
from .core import *

# Cell
COUNTRIES = [x.parts[-1] for x in PROCESSED_DIR_BASE.iterdir()]

COUNTRIES

# Cell
_neccessary_cols = ['Week', 'Year', 'Deaths']
_extra_cols = ['Age', 'Sex', 'Region', 'Condition']

_dfs = [pd.read_csv(PROCESSED_DIR_BASE/c/'deaths.csv') for c in COUNTRIES]

for country, df in zip(COUNTRIES, _dfs):

    # No other column than the ones listed above
    assert all([x in _neccessary_cols+_extra_cols for x in df.columns])

    # We have all necessary columns
    assert all(x in df.columns for x in _neccessary_cols)

    # Pad other columns with 'Total' so they match up
    for col in _extra_cols:
        if col not in df.columns:
            df[col] = 'Total'

    df['Country'] = country

# Align columns
_dfs = [df[['Country'] + _neccessary_cols[:2] + _extra_cols + ['Deaths']] for df in _dfs]

# Cell
def _get_unique_vals(country, df, cols = ['Year', 'Age', 'Sex', 'Region', 'Condition']):
    colvals = {'Country': country}
    colvals.update({c:df[c].unique() for c in cols})
    return colvals

SUMMARY = pd.DataFrame([_get_unique_vals(c, d) for c, d in zip(COUNTRIES, _dfs)]).to_html()